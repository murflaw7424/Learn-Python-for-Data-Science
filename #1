from sklearn import tree
from sklearn.ensemble import RandomForestClassifier
from sklearn.naive_bayes import GaussianNB
from sklearn.neighbors import KNeighborsClassifier
from sklearn.metrics import accuracy_score

#[height, weight, shoe size]
X = [[181,80,44], [177, 70, 43], [160, 60, 38], [154,54,37], 
	[166,65,40], [190,90,47], [175,64,39],[177,70,40],[159,55,37],
	[171,75,42],[181,85,43]]

Y = ['male', 'female', 'female', 'female', 'male', 'male', 
	'male', 'female', 'male', 'female', 'male']

clf = tree.DecisionTreeClassifier()
clf = clf.fit(X,Y)
DTpredicition = clf.predict ([[190,70,43]])
print("Predict Decision Tree: ", DTpredicition)

#GaussianNB
clf_gaus = GaussianNB()
clf_gaus.fit(X, Y)
GAUSprediction = clf_gaus.predict([[190,70,43]])
print("Predict Gaussian: ", GAUSprediction)

#KNeighbors
clf_kneighbors = KNeighborsClassifier()
clf_kneighbors.fit(X,Y)
KNprediction = clf_kneighbors.predict([[190,70,43]])
print("Predict Neighbors: ",KNprediction)

#RandomForest
clf_ranfor = RandomForestClassifier()
clf_ranfor.fit(X,Y)
RFprediction = clf_ranfor.predict([[190,70,43]])
print("Predict Random Forest: ",RFprediction)

# Summary: the classifiers KNeigbors and Gaussian naive bayes are the most accurate ones.
